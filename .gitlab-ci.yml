stages:
  - build_image
  - deploy

services:
- docker:dind

variables:
  CONTAINER_IMAGE: registry.gitlab.com/montogeek/testdoc/backend

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com

build_image:
  stage: build_image
  image: docker:git
  services:
    - docker:dind
  script:
    - cd code
    - docker build --cache-from $CONTAINER_IMAGE:latest --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE:latest -f ./Dockerfile.production .
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE:latest
  only:
    - master

# build:
#   stage: build
#   image: php:7.2
#   cache:
#     paths:
#     - code/vendor/

#   before_script:
#   - apt-get update && apt-get install -y build-essential mysql-client libpng-dev libjpeg62-turbo-dev libfreetype6-dev locales zip jpegoptim optipng pngquant gifsicle vim unzip git curl
#   - docker-php-ext-install pdo_mysql mbstring zip exif pcntl
#   - docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/
#   - docker-php-ext-install gd
#   # Install and run Composer
#   - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

#   script:
#     - cd code
#     - composer install
#   services:
#     - mysql:5.7

#   variables:
#     MYSQL_DATABASE: events
#     MYSQL_ROOT_PASSWORD: root

deploy:
  stage: deploy
  image: docker:git
  only:
    - master
  before_script:
    - apt-get update
    - apt-get install curl
    - curl -L https://github.com/docker/machine/releases/download/v0.13.0/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine
    - chmod +x /tmp/docker-machine
    - sudo cp /tmp/docker-machine /usr/local/bin/docker-machine
  script:
    - docker-machine create --drive generic --generic-ip-address=138.197.6.62